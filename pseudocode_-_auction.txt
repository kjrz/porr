auction(graph, source, destination)
	
	path  [numberOfNodes] = {source,null,...,null}
	prices[numberOfNodes] = {0,...,0}
	
	while added != destination
		last = null							// get last element of path
		for each element of path
			if element != null
				last = element
			else
				break
		
		nearestDistance  = infinity
		nearestNeighbour = null
		
		for each neighbour of last					// get min{aij+pj}
			neighbourDistance =
				distance(last, neighbour)
				+ prices[neighbour]
			if neighbourDistance < nearestDistance
				nearestToNeighbour = distanceToNeighbour
				nearestNeighbour = neighbour
		
		if prices[last] < nearestDistance				// Step 1
			prices[last] = nearestDistance				// update prices
			if last != 1						// contract path
				path[last] = null
		else								// Step 2
			added = nearestNeighbour				// extend path
